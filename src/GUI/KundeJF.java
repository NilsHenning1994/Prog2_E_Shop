/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import rmi.common.ArtikelRemote;
import rmi.common.EShopRemote;
import rmi.common.EventType;
import rmi.common.KundeRemote;
import rmi.common.PersonRemote;
import rmi.common.WarenkorbRemote;


/**
 *
 * @author Gruppe A4(Patrick, Oleksandra, Walter)
 */
public class KundeJF extends javax.swing.JFrame {
    private EShopRemote eshopartikel;
    private Vector<ArtikelRemote> artikelliste;
    private Vector<ArtikelRemote> warenkorbListe;
    private static KundeRemote eingeloggt;
    DefaultTableModel modelArt;
    DefaultTableModel modelWaren;
    Map<Integer, Integer> bestandMap;
    WarenkorbRemote kundeWK;
    /**
     * Creates new form KundeJF
     * @param kunde
     */
    public KundeJF(KundeRemote kunde) throws IOException, RemoteException, NotBoundException {
        initComponents();
        setLocationRelativeTo(null);
        Registry registry = LocateRegistry.getRegistry();
        eshopartikel = (EShopRemote) registry.lookup("eshop");
        artikelliste = eshopartikel.gibArtikelListe();
        //Tabelle generieren für Artikel Suchen
        modelArt = new DefaultTableModel();
        jTableArtSuchen.setModel(modelArt);
        modelArt.addColumn("Bezeichnung");
        modelArt.addColumn("Preis");
        modelArt.addColumn("Verfügbar");
        //Tabelle generieren für Warenkorb
        modelWaren = new DefaultTableModel();
        jTableWarenkorb.setModel(modelWaren);
        modelWaren.addColumn("Bezeichnung");
        modelWaren.addColumn("Anzahl");
        modelWaren.addColumn("Preis");
        eingeloggt = kunde;
        
        bestandMap = eshopartikel.gibArtikelbestand();
        
        //kundeWK = new WarenkorbRemote(eingeloggt.getKundenNr()+ "WK1", eingeloggt, warenkorbListe  );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanelSuchenEben1 = new javax.swing.JPanel();
        jTextFieldArtSuchen = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableArtSuchen = new javax.swing.JTable();
        jButtonArtWarenkorb = new javax.swing.JButton();
        jButtonArtSuchen = new javax.swing.JButton();
        jLabelSuchenError = new javax.swing.JLabel();
        jTextFieldArtAnzahl = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanelWarenkorbLo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableWarenkorb = new javax.swing.JTable();
        jButtonWarenEntfernen = new javax.swing.JButton();
        jButtonWarenBestellen = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanelSuchenEben1.setBackground(new java.awt.Color(255, 255, 255));
        jPanelSuchenEben1.setBorder(javax.swing.BorderFactory.createTitledBorder("Artikel suchen"));

        jTableArtSuchen.setAutoCreateRowSorter(true);
        jTableArtSuchen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableArtSuchen);

        jButtonArtWarenkorb.setBackground(new java.awt.Color(0, 204, 204));
        jButtonArtWarenkorb.setText("Zum Warenkorb hinzufügen");
        jButtonArtWarenkorb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonArtWarenkorbActionPerformed(evt);
            }
        });

        jButtonArtSuchen.setBackground(new java.awt.Color(0, 204, 204));
        jButtonArtSuchen.setText("Suchen");
        jButtonArtSuchen.setBorder(null);
        jButtonArtSuchen.setBorderPainted(false);
        jButtonArtSuchen.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonArtSuchen.setRequestFocusEnabled(false);
        jButtonArtSuchen.setRolloverEnabled(false);
        jButtonArtSuchen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonArtSuchenActionPerformed(evt);
            }
        });

        jLabelSuchenError.setBackground(new java.awt.Color(255, 255, 255));
        jLabelSuchenError.setText(" ");

        jTextFieldArtAnzahl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldArtAnzahl.setText("1");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Anzahl der Artikel dem Warenkorb hinzufügen.");

        javax.swing.GroupLayout jPanelSuchenEben1Layout = new javax.swing.GroupLayout(jPanelSuchenEben1);
        jPanelSuchenEben1.setLayout(jPanelSuchenEben1Layout);
        jPanelSuchenEben1Layout.setHorizontalGroup(
            jPanelSuchenEben1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSuchenEben1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSuchenEben1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addGroup(jPanelSuchenEben1Layout.createSequentialGroup()
                        .addComponent(jButtonArtWarenkorb)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldArtAnzahl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelSuchenEben1Layout.createSequentialGroup()
                        .addComponent(jTextFieldArtSuchen, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonArtSuchen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabelSuchenError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanelSuchenEben1Layout.setVerticalGroup(
            jPanelSuchenEben1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSuchenEben1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSuchenEben1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldArtSuchen)
                    .addComponent(jButtonArtSuchen, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelSuchenError)
                .addGap(9, 9, 9)
                .addGroup(jPanelSuchenEben1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonArtWarenkorb)
                    .addComponent(jTextFieldArtAnzahl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelSuchenEben1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelSuchenEben1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Suchen", jPanel1);

        jPanelWarenkorbLo.setBackground(new java.awt.Color(255, 255, 255));
        jPanelWarenkorbLo.setBorder(javax.swing.BorderFactory.createTitledBorder("Warenkorb"));

        jTableWarenkorb.setAutoCreateRowSorter(true);
        jTableWarenkorb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableWarenkorb);

        jButtonWarenEntfernen.setBackground(new java.awt.Color(0, 204, 204));
        jButtonWarenEntfernen.setText("Entfernen");
        jButtonWarenEntfernen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWarenEntfernenActionPerformed(evt);
            }
        });

        jButtonWarenBestellen.setBackground(new java.awt.Color(0, 204, 255));
        jButtonWarenBestellen.setText("Bestellen");
        jButtonWarenBestellen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonWarenBestellenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelWarenkorbLoLayout = new javax.swing.GroupLayout(jPanelWarenkorbLo);
        jPanelWarenkorbLo.setLayout(jPanelWarenkorbLoLayout);
        jPanelWarenkorbLoLayout.setHorizontalGroup(
            jPanelWarenkorbLoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWarenkorbLoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWarenkorbLoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanelWarenkorbLoLayout.createSequentialGroup()
                        .addComponent(jButtonWarenEntfernen)
                        .addGap(432, 432, 432))
                    .addComponent(jButtonWarenBestellen, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanelWarenkorbLoLayout.setVerticalGroup(
            jPanelWarenkorbLoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelWarenkorbLoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonWarenBestellen)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonWarenEntfernen)
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelWarenkorbLo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelWarenkorbLo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Warenkorb", jPanel2);

        jMenu1.setText("Menu");

        jMenuItem1.setText("logout");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.setVisible(false);
        try {
            new login().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonArtSuchenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonArtSuchenActionPerformed
        try {
            
            bestandMap = eshopartikel.gibArtikelbestand();
        } catch (RemoteException ex) {
            Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
        }
        modelArt = new DefaultTableModel();
        jTableArtSuchen.setModel(modelArt);
        modelArt.addColumn("Bezeichnung");
        modelArt.addColumn("Preis");
        modelArt.addColumn("Verfügbar");
        String verfuegbar = "nein";
        try {
            artikelliste = eshopartikel.gibArtikelListe();
        } catch (IOException ex) {
            Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(jTextFieldArtSuchen.getText().equalsIgnoreCase("")){
            
            try {
                Vector<ArtikelRemote> suchErgebnis = eshopartikel.gibArtikelListe();                
                for (ArtikelRemote artikel: suchErgebnis) {
                
               if(bestandMap.get(Integer.parseInt(artikel.getNummer()))> 0){
                   verfuegbar =  bestandMap.get(Integer.parseInt(artikel.getNummer())) + " Verfügbar";
                }  
                modelArt.addRow(new Object[]{ artikel.getBez(), artikel.getPreis(), verfuegbar });
            }
                
            } catch (IOException ex) {
                Logger.getLogger(MitarbeiterJF.class.getName()).log(Level.SEVERE, null, ex);
            }    
        }
        else{
            
        try {
//            s = "" + eshopartikel.sucheNachArtikeltitel(jTextFieldLFArtSuchen.getText());
            Vector<ArtikelRemote> suchErgebnis = eshopartikel.sucheNachArtikeltitel(jTextFieldArtSuchen.getText());
            for (ArtikelRemote artikel: suchErgebnis) {
                modelArt.addRow(new Object[]{ artikel.getBez(), artikel.getPreis(), verfuegbar});
            }
        } catch (IOException ex) {
            Logger.getLogger(MitarbeiterJF.class.getName()).log(Level.SEVERE, null, ex);
            jLabelSuchenError.setForeground(Color.RED);
            jLabelSuchenError.setText("Keine Artikel gefunden!");
        }

        }
    }//GEN-LAST:event_jButtonArtSuchenActionPerformed

    private void jButtonArtWarenkorbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonArtWarenkorbActionPerformed
        
        int posx = jTableArtSuchen.getSelectedRow();
        jLabelSuchenError.setText("");
        ArtikelRemote art = null;
        PersonRemote p = null;
        for(ArtikelRemote a : artikelliste) {
            try {
                if (a.getBez().equals(jTableArtSuchen.getValueAt(posx, 0))) {
                    art = a;
                    int bestand = bestandMap.get(Integer.parseInt(a.getNummer())) - Integer.parseInt(jTextFieldArtAnzahl.getText());
                    if(bestand >= 0){
                        //kundeWK.addArtZuWarenkorb(a);
                        bestandMap.put(Integer.parseInt(a.getNummer()),  bestand);
                        eshopartikel.speicherBestand(bestandMap);
                        modelWaren.addRow(new Object[]{jTableArtSuchen.getValueAt(posx, 0), jTextFieldArtAnzahl.getText(), jTableArtSuchen.getValueAt(posx,1)});
                        jLabelSuchenError.setForeground(Color.GREEN);
                        jLabelSuchenError.setText("Artikel im Warenkorb hinzugefügt.");
                    } else{
                        jLabelSuchenError.setForeground(Color.RED);
                        jLabelSuchenError.setText("Artikel nicht genug auf dem Lager.");
                    }
                    
                    
                    break;
                }
            } catch (RemoteException ex) {
                Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
//        try {
//            eshopartikel.eventAnlegen(art, Integer.parseInt(jTextFieldArtAnzahl.getText()), eingeloggt, EventType.KAUF);
//        } catch (IOException ex) {
//            Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jButtonArtWarenkorbActionPerformed

    private void jButtonWarenBestellenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWarenBestellenActionPerformed
        try {        
            new Rechnung("1234", eingeloggt, modelWaren).setVisible(true);
        } catch (RemoteException ex) {
            Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonWarenBestellenActionPerformed

    private void jButtonWarenEntfernenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonWarenEntfernenActionPerformed
        int posx = jTableWarenkorb.getSelectedRow();
        modelWaren.removeRow(posx);
        
        ArtikelRemote art = null;
        PersonRemote p = null;
        for(ArtikelRemote a : artikelliste) {
            try {
                if (a.getBez().equals(jTableWarenkorb.getValueAt(posx, 0))) {
                    art = a;
                    int bestand = bestandMap.get(Integer.parseInt(a.getNummer())) + Integer.parseInt(jTableWarenkorb.getValueAt(posx, 1).toString());
                    bestandMap.put(Integer.parseInt(a.getNummer()),  bestand);
                    
                    break;
                }
            } catch (RemoteException ex) {
                Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            eshopartikel.eventAnlegen(art, Integer.parseInt(jTextFieldArtAnzahl.getText()), eingeloggt, EventType.KAUF);
        } catch (IOException ex) {
            Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
    }//GEN-LAST:event_jButtonWarenEntfernenActionPerformed

    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KundeJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KundeJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KundeJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KundeJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new KundeJF(eingeloggt).setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NotBoundException ex) {
                    Logger.getLogger(KundeJF.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonArtSuchen;
    private javax.swing.JButton jButtonArtWarenkorb;
    private javax.swing.JButton jButtonWarenBestellen;
    private javax.swing.JButton jButtonWarenEntfernen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelSuchenError;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelSuchenEben1;
    private javax.swing.JPanel jPanelWarenkorbLo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableArtSuchen;
    private javax.swing.JTable jTableWarenkorb;
    private javax.swing.JTextField jTextFieldArtAnzahl;
    private javax.swing.JTextField jTextFieldArtSuchen;
    // End of variables declaration//GEN-END:variables
}
